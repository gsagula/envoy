syntax = "proto3";

package envoy.config.filter.http.compression.v2alpha;

option java_outer_classname = "CompressionProto";
option java_package = "io.envoyproxy.envoy.config.filter.http.compression.v2alpha";
option java_multiple_files = true;
option go_package = "v2alpha";

import "envoy/type/gzip.proto";
import "envoy/type/matcher/string.proto";
import "envoy/type/matcher/number.proto";

import "google/protobuf/wrappers.proto";
import "validate/validate.proto";
import "gogoproto/gogo.proto";

// [#protodoc-title: Compression]

message Compression {
  message Decoder {
    // Configure policies for handling compression.
    repeated Policy policies = 1;
  }
  
  message Encoder {
    // Configure policies for handling compression.
    repeated Policy policies = 1;
  }

  message Policy {  
    // Configures the compression type algorithm.
    CompressionType compression_type = 1;

    // When supplied, it evaluate the Content-Type header for a match.
    repeated HeaderMatcher headers = 2;
  
    // When supplied, it evaluate the Content-Length header for a match.
    envoy.type.matcher.UintMatcher content_length = 3;
  
    // Strip off Accept-Enconding from the client headers.
    bool remove_accept_encoding_header = 4;
  
    // If true, disables compression when the response contains an etag header. When it is false,
    // the filter will preserve weak etags and remove the ones that require strong validation.
    bool disable_on_etag_header = 5;
  }

  message CompressionType {
    oneof type {
      // Settings for Gzip compression algorithm.
      envoy.type.Gzip gzip = 1;

      // Other algorithm configurations go here..
    }
  }

  message HeaderMatcher {
    // Header key.
    envoy.type.matcher.StringMatcher key = 1;
  
    // Header value.
    oneof values {
      option (validate.required) = true;
  
      // Match any key of type string.
      envoy.type.matcher.ListStringMatcher value = 2;
  
      // When true, matches any value in the key. Otherwise rejects any value in the key.
      bool key_matcher = 3;
    }
  } 
}
